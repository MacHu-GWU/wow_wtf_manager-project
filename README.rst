World of Warcraft WTF Manager
==============================================================================
该项目是一个用于管理魔兽世界客户端 WTF 配置文件的工具. 工具本身非常强大, 可扩展性也很强 (用 Python 实现的), 需要花点时间学习才能正确地使用.


WTF 文件是什么
------------------------------------------------------------------------------


WTF 文件的管理的痛点
------------------------------------------------------------------------------
首先我们要明确, 备份 WTF 文件不是痛点, 因为你只要备份整个 WTF 文件夹即可. 而灵活的批量修改 WTF 文件才是痛点.

每一个游戏角色背后都有一系列的 WTF 文件. 管理 WTF 的本质就是管理 游戏角色, 和具体的配置之间的关系. 这是一个典型的多对多的关系. 有的配置需要被这几个角色公用, 有的要被那几个角色公用. 今天这个角色用这个配置, 明天对这个配置修改了, 想要引用到其他的角色上. 这才是管理的复杂度来源.


WTF 文件管理系统设计
------------------------------------------------------------------------------
我们既然知道这个事情的本质就是 角色 <-> 配置 的关系. 那么我们可以参考

首先管理角色. 我们可以将角色分组. 例如, 按照账户分组, 按照职业分组, 按照天赋分组等等. 这些组之间可以进行集合的 交, 并, 补 操作. 分组之后我们就可以以组为单位轻松的定义任意想要的角色列表.

然后管理配置. 我们可以将同一类的配置放在同一个文件夹下, 比如这个文件件都是键位配置. 我们可能有 3 种不同的键位配置.

最后我们可以用一个 Association 文件, 定义角色分组和配置的关系. 这个角色分组用这个配置. 那个角色分组用那个配置. 定义好之后就一键运行程序, 所有的配置就都弄好了.


Code Structure 代码文件结构设计
------------------------------------------------------------------------------
本节针是对开发者的文档. 帮助开发者理清代码结构和逻辑关系. 该代码库的文件结构如下::

    wow_wtf_manager Python 库根目录
    |-- app
        |-- e03_wotlk
            |-- acore
            |-- warmane
        |-- e05_mop
    # 各个资料片与 WTF 相关的 Python 实现, 里面有多个子文件夹, 每个子文件夹代表一个资料片
    # 例如 巫妖王之怒 和 熊猫人之谜 客户端的宏命令文件格式不一样, 客户端也有不同的 config
    |-- exp
        # 巫妖王之怒资料片
        # 由于巫妖王之怒是最热门的资料片, 所以我们以此为例
        # 其他资料片里的模块跟这个类似
        |-- e03_wotlk
            |-- form 客户端配置的表单, 定义了你游戏客户端 WTF 文件夹下所有文件的具体内容的生成代码
            |-- group 跟 游戏账号 / 角色 相关的实现
            |-- macro 跟 宏命令 相关的实现
            |-- wtf WTF 文件夹下各个文件的抽象实现
        |-- e05_mop 熊猫人指望资料片

对于 ``wow_wtf_manager`` 库的开发者来说, 需要关注的是 ``exp`` 文件夹下的内容.

而对于使用 ``wow_wtf_manager`` 来管理游戏客户端下的配置文件的用户来说, 需要关注的是 ``app`` 文件夹下的内容.

最后在整个项目的根目录下有一个 ``project`` 目录, 里面存放了对于某个具体的游戏客户端中的各种配置的原始文件. 例如你在 ``warmane`` 服务器上有 5 个号, 你想要备份 WTF 文件, 并且将一些公用的配置应用到新建的角色上, 你就需要从游戏客户端的 WTF 文件夹中把配置拷贝到这里面来.





